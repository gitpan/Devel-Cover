Reading database from /home/pjcj/g/perl/dev/Devel-Cover-0.3702/cover_db


------------------------------------------ ------ ------ ------ ------ ------
File                                         stmt branch   cond    sub  total
------------------------------------------ ------ ------ ------ ------ ------
tests/overloaded                            100.0   50.0    n/a  100.0   91.7
Total                                       100.0   50.0    n/a  100.0   91.7
------------------------------------------ ------ ------ ------ ------ ------


tests/overloaded

line  err   stmt branch   cond    sub   code
1                                       #!/usr/bin/perl
2                                       
3                                       # Copyright 2003-2004, Paul Johnson (pjcj@cpan.org)
4                                       
5                                       # This software is free.  It is licensed under the same terms as Perl itself.
6                                       
7                                       # The latest version of this software should be available from my homepage:
8                                       # http://www.pjcj.net
9                                       
10                                      # Example stolen from overload documentation
11                                      
12                                      package two_face;
13                                      
14             1                  100   sub new { my $p = shift; bless [@_], $p }
               1                        
15                                      use overload '""' => \&str, '0+' => \&num, fallback => 1;
16             2                  100   sub num {shift->[1]}
17             2                  100   sub str {shift->[0]}
18                                      
19                                      package main;
20                                      
21             1                        my $seven = new two_face ("vii", 7);
22             1                        printf "seven=$seven, seven=%d, eight=%d\n", $seven, $seven+1;
23    ***      1     50                 print "seven contains `i'\n" if $seven =~ /i/;


Branches
--------

line  err      %   true  false   branch
----- --- ------ ------ ------   ------
23    ***     50      1      0   if $seven =~ /i/


Covered Subroutines
-------------------

Subroutine Location           
---------- -------------------
new        tests/overloaded:14
num        tests/overloaded:16
str        tests/overloaded:17


