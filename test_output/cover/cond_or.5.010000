Reading database from /home/pjcj/g/perl/svk/dc/cover_db


------------------------------------------ ------ ------ ------ ------ ------
File                                         stmt   bran   cond    sub  total
------------------------------------------ ------ ------ ------ ------ ------
tests/cond_or                                90.7   35.0   72.3   75.0   74.4
tests/cond_or.pl                            100.0    n/a   62.5  100.0   78.6
Total                                        93.8   35.0   67.8   85.7   75.9
------------------------------------------ ------ ------ ------ ------ ------


Run: ...
Perl version: ...
OS: ...
Start: ...
Finish: ...

tests/cond_or

line  err   stmt   bran   cond    sub   code
1                                       #!/usr/bin/perl
2                                       
3                                       # Copyright 2002-2007, Paul Johnson (pjcj@cpan.org)
4                                       
5                                       # This software is free.  It is licensed under the same terms as Perl itself.
6                                       
7                                       # The latest version of this software should be available from my homepage:
8                                       # http://www.pjcj.net
9                                       
10             1                    1   use strict;
               1                        
               1                        
11             1                    1   use warnings;
               1                        
               1                        
12                                      
13             1                        my @x;
14                                      
15             1                        my $y  = 1;
16             1                        my $z  = 0;
17             1                        $::foo = 17;
18                                      
19    ***      1     50                 if ($] >= 5.009)
20                                      {
21             1                            $ENV{PATH} = "/bin";
22             1                            system "pwd";
23             1                    1       use lib "tests";
               1                        
               1                        
24             1                            my $file = "cond_or.pl";
25    ***      1     50                     unless (my $return = do $file)
26                                          {
27    ***      0      0                         die "couldn't parse $file: $@" if $@;
28    ***      0      0                         die "couldn't do $file: $!"    unless defined $return;
29    ***      0      0                         die "couldn't run $file"       unless $return;
30                                          }
31                                      }
32                                      
33             1                        for (0 .. 10)
34                                      {
35    ***     11     50                     $y ||
36                                              $x[1]++;
37                                      
38    ***     11     50     33              $y ||
39                                              $x[0]++ ||
40                                              $x[1]++;
41                                      
42    ***     11     50                     $x[2]++
43                                              unless $z;
44                                      
45            11                            for (0 .. 2)
46                                          {
47            33                                $x[3]++;
48                                          }
49                                      
50    ***     11     50                     if ($z)
51                                          {
52    ***      0                                $x[4]++;
53                                          }
54                                          else
55                                          {
56            11                                $x[5]++;
57                                          }
58                                      
59    ***     11            33              my $p = $y || $z;
60    ***     11            33              my $q = $z || $y;
61            11           100              my $r = $_ || "qqq";
62            11           100              my $s = $_ || [];
63            11                            my $t = $y | $z;
64    ***     11            50              my $u = $y || 0;
65    ***     11            50              my $v = $y || undef;
66    ***     11            50              my $w = $z || 0;
67                                      
68    ***     11            50              $p     ||= $y;
69    ***     11            50              $p     ||= $z;
70            11           100              $x[ 6] ||= $y;
71    ***     11            50              $x[ 7] ||= $z;
72            11           100              $x[ 8] ||= 1;
73            11           100              $x[ 9] ||= {};
74            11           100              $x[10] ||= \"foo";
75            11           100              $x[11] ||= \$y;
76            11           100              $x[12] ||= \*STDIO;
77    ***     11           100      0       $x[13] ||= sub { 1 };
      ***      0                        
78            11           100              $x[14] ||= *::foo{SCALAR};
79    ***     11            50              $x[15] ||= *STDIO{IO};
80            11           100              $x[16] ||= bless {}, "XXX";
81            11           100              $x[17] ||= <<"EOD";
82                                      blah
83                                      EOD
84    ***     11     50                     cond_dor(\@x) if exists &cond_dor;
85                                      }
86                                      
87                                      # print join(", ", @x), "\n";


Branches
--------

line  err      %   true  false   branch
----- --- ------ ------ ------   ------
19    ***     50      1      0   if ($] >= 5.009)
25    ***     50      0      1   unless (my $return = do $file)
27    ***      0      0      0   if $@
28    ***      0      0      0   unless defined $return
29    ***      0      0      0   unless $return
35    ***     50      0     11   unless $y
38    ***     50      0     11   unless $y or $x[0]++
42    ***     50     11      0   unless $z
50    ***     50      0     11   if ($z) { }
84    ***     50     11      0   if exists &cond_dor


Conditions
----------

or 2 conditions

line  err      %      l     !l   expr
----- --- ------ ------ ------   ----
61           100     10      1   $_ || 'qqq'
62           100     10      1   $_ || []
64    ***     50     11      0   $y || 0
65    ***     50     11      0   $y || undef
66    ***     50      0     11   $z || 0
68    ***     50     11      0   $p ||= $y
69    ***     50     11      0   $p ||= $z
70           100     10      1   $x[6] ||= $y
71    ***     50      0     11   $x[7] ||= $z
72           100     10      1   $x[8] ||= 1
73           100     10      1   $x[9] ||= {}
74           100     10      1   $x[10] ||= \'foo'
75           100     10      1   $x[11] ||= \$y
76           100     10      1   $x[12] ||= \*STDIO
77           100     10      1   $x[13] ||= sub {
	1;
}

78           100     10      1   $x[14] ||= *foo{'SCALAR'}
79    ***     50      0     11   $x[15] ||= *STDIO{'IO'}
80           100     10      1   $x[16] ||= bless({}, 'XXX')
81           100     10      1   $x[17] ||= "blah\n"

or 3 conditions

line  err      %      l  !l&&r !l&&!r   expr
----- --- ------ ------ ------ ------   ----
38    ***     33     11      0      0   $y or $x[0]++
59    ***     33     11      0      0   $y || $z
60    ***     33      0     11      0   $z || $y


Covered Subroutines
-------------------

Subroutine Count Location        
---------- ----- ----------------
BEGIN          1 tests/cond_or:10
BEGIN          1 tests/cond_or:11
BEGIN          1 tests/cond_or:23

Uncovered Subroutines
---------------------

Subroutine Count Location        
---------- ----- ----------------
__ANON__       0 tests/cond_or:77


tests/cond_or.pl

line  err   stmt   bran   cond    sub   code
1                                       #!/usr/bin/perl
2                                       
3                                       # Copyright 2002-2007, Paul Johnson (pjcj@cpan.org)
4                                       
5                                       # This software is free.  It is licensed under the same terms as Perl itself.
6                                       
7                                       # The latest version of this software should be available from my homepage:
8                                       # http://www.pjcj.net
9                                       
10             1                    1   use strict;
               1                        
               1                        
11             1                    1   use warnings;
               1                        
               1                        
12                                      
13                                      sub cond_dor
14                                      {
15            11                   11       my ($x) = @_;
16                                      
17            11           100              $x->[18] //= undef;
18            11           100              $x->[18] //= 0;
19    ***     11            50              $x->[18] //= 0;
20    ***     11            50              $x->[18] //= 1;
21    ***     11            50              $x->[18] //= 1;
22                                      
23            11           100              $x->[19] //= 1;
24    ***     11            50              $x->[19] //= 1;
25    ***     11            50              $x->[19] //= 0;
26    ***     11            50              $x->[19] //= undef;
27    ***     11            50              $x->[19] //= 1;
28                                      
29    ***     11            50              $x->[20]   = $x->[21] // undef;
30    ***     11            50              $x->[20]   = $x->[21] // 0;
31    ***     11            50              $x->[20]   = $x->[21] // 0;
32    ***     11            50              $x->[20]   = $x->[21] // 1;
33    ***     11            50              $x->[20]   = $x->[21] // 1;
34                                      
35            11           100              $x->[22]   = $x->[22] // undef;
36            11           100              $x->[22]   = $x->[22] // 0;
37    ***     11            50              $x->[22]   = $x->[22] // 0;
38    ***     11            50              $x->[22]   = $x->[22] // 1;
39    ***     11            50              $x->[22]   = $x->[22] // 1;
40                                      }
41                                      
42                                      1;


Conditions
----------

or 2 conditions

line  err      %      l     !l   expr
----- --- ------ ------ ------   ----
17           100     10      1   $$x[18] //= undef
18           100     10      1   $$x[18] //= 0
19    ***     50     11      0   $$x[18] //= 0
20    ***     50     11      0   $$x[18] //= 1
21    ***     50     11      0   $$x[18] //= 1
23           100     10      1   $$x[19] //= 1
24    ***     50     11      0   $$x[19] //= 1
25    ***     50     11      0   $$x[19] //= 0
26    ***     50     11      0   $$x[19] //= undef
27    ***     50     11      0   $$x[19] //= 1
29    ***     50      0     11   $$x[21] // undef
30    ***     50      0     11   $$x[21] // 0
31    ***     50      0     11   $$x[21] // 0
32    ***     50      0     11   $$x[21] // 1
33    ***     50      0     11   $$x[21] // 1
35           100     10      1   $$x[22] // undef
36           100     10      1   $$x[22] // 0
37    ***     50     11      0   $$x[22] // 0
38    ***     50     11      0   $$x[22] // 1
39    ***     50     11      0   $$x[22] // 1


Covered Subroutines
-------------------

Subroutine Count Location           
---------- ----- -------------------
BEGIN          1 tests/cond_or.pl:10
BEGIN          1 tests/cond_or.pl:11
cond_dor      11 tests/cond_or.pl:15


