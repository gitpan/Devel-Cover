Reading database from /home/pjcj/g/perl/svk/dc/cover_db


------------------------------------------ ------ ------ ------ ------ ------
File                                         stmt   bran   cond    sub  total
------------------------------------------ ------ ------ ------ ------ ------
tests/eval1                                  94.1    n/a    n/a   75.0   90.5
Total                                        94.1    n/a    n/a   75.0   90.5
------------------------------------------ ------ ------ ------ ------ ------


Run: ...
Perl version: ...
OS: ...
Start: ...
Finish: ...

tests/eval1

line  err   stmt   bran   cond    sub   code
1                                       #!/usr/bin/perl
2                                       
3                                       # Copyright 2002-2007, Paul Johnson (pjcj@cpan.org)
4                                       
5                                       # This software is free.  It is licensed under the same terms as Perl itself.
6                                       
7                                       # The latest version of this software should be available from my homepage:
8                                       # http://www.pjcj.net
9                                       
10                                      use strict;
11                                      use warnings;
12                                      
13                                      use lib -d "t" ? "t" : "..";
14                                      
15             1                        my $x;
16                                      
17             1                    3   eval <<'EOS';
               3                        
               3                        
18                                      sub e
19                                      {
20                                          $x++;
21                                          $x
22                                      }
23                                      EOS
24                                      
25             1                    2   eval <<'EOS';
      ***      2                    0   
               2                    3   
      ***      0                        
               3                        
26                                      sub f
27                                      {
28                                          $x++;
29                                          $x
30                                      }
31                                      
32                                      sub g
33                                      {
34                                          $x++;
35                                      }
36                                      
37                                      sub h
38                                      {
39                                          $x++;
40                                      }
41                                      EOS
42                                      
43             1                        e();
44             1                        e();
45             1                        e();
46             1                        f();
47             1                        f();
48             1                        h();
49             1                        h();
50             1                        h();


Covered Subroutines
-------------------

Subroutine Count Location      
---------- ----- --------------
e              3 tests/eval1:17
f              2 tests/eval1:25
h              3 tests/eval1:25

Uncovered Subroutines
---------------------

Subroutine Count Location      
---------- ----- --------------
g              0 tests/eval1:25


