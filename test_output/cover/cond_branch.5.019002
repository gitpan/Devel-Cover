Reading database from ...


------------------------------------------ ------ ------ ------ ------ ------
File                                         stmt   bran   cond    sub  total
------------------------------------------ ------ ------ ------ ------ ------
tests/cond_branch                            90.3   79.3   32.9  100.0   76.2
Total                                        90.3   79.3   32.9  100.0   76.2
------------------------------------------ ------ ------ ------ ------ ------


Run: ...
Perl version: ...
OS: ...
Start: ...
Finish: ...

tests/cond_branch

line  err   stmt   bran   cond    sub   code
1                                       #!/usr/bin/perl
2                                       
3                                       # Copyright 2002-2014, Paul Johnson (paul@pjcj.net)
4                                       
5                                       # This software is free.  It is licensed under the same terms as Perl itself.
6                                       
7                                       # The latest version of this software should be available from my homepage:
8                                       # http://www.pjcj.net
9                                       
10             1                    1   use strict;
               1                        
               1                        
11             1                    1   use warnings;
               1                        
               1                        
12                                      
13             1                        my @x;
14                                      
15             1                        for my $y (0, 0)
16                                      {
17             2                            for my $z (1, 0)
18                                          {
19    ***      4     50     33                  if ($y && $z)
20                                              {
21    ***      0                                    $x[1]++;
22                                              }
23                                              else
24             4                                {
25                                                  $x[2]++;
26    ***      4    100     66                  }
27                                              if ($y || $z)
28             2                                {
29                                                  $x[3]++;
30                                              }
31             2                                else
32                                              {
33                                                  $x[4]++;
34    ***      4     50                         }
35    ***      4     50                 
36                                              $y && $x[5]++;
37             4    100                         $x[5]++ if $y;
38             4    100                 
39                                              $z && $x[6]++;
40    ***      4     50                         $x[6]++ if $z;
41    ***      4     50                 
42                                              $y || $x[7]++;
43             4    100                         $x[7]++ unless $y;
44             4    100                 
45                                              $z || $x[8]++;
46    ***      4     50                         $x[8]++ unless $z;
47             4    100                 
48                                              $y ? $x[9]++  : $x[10]++;
49    ***      4     50     33                  $z ? $x[11]++ : $x[12]++;
      ***            50     66          
                    100                 
50                                      
51    ***      0                                if ($y)
52                                              {
53                                                  $x[13]++;
54                                              }
55    ***      0                                elsif ($y && $z)
56                                              {
57                                                  $x[14]++;
58                                              }
59             2                                elsif ($y || $z)
60                                              {
61                                                  $x[15]++;
62             2                                }
63                                              else
64                                              {
65    ***      4     50     33                      $x[16]++;
      ***      4     50     33          
66                                              }
67                                      
68                                              $y && $z && $x[17]++; $y && $z && $x[18]++;
69                                          }
70             1                        }
71                                      
72             2    100                 
73             1                        for my $y (0, 1)
74                                      {
75                                          $y || next;
76             1                            $x[18]++;
77                                      }
78             2    100                 
79             1                        for my $y (1, 0)
80                                      {
81                                          $y || next;
82             1                            $x[19]++;
83                                      }
84             2    100                 
85             1                        for my $y (0, 1)
86                                      {
87                                          $y && next;
88             1                            $x[20]++;
89                                      }
90             2    100                 
91             1                        for my $y (1, 0)
92                                      {
93                                          $y && next;
94             1                            $x[21]++;
95                                      }
96             1                    1   
               1                        
               1                        
97    ***      2             0          for my $y (0, 1)
98    ***      0                        {
99                                          no warnings "void";
100                                         my $w = $y xor next;
101            1                            $x[22]++;
102                                     }
103            1                    1   
               1                        
               1                        
104   ***      2             0          for my $y (1, 0)
105   ***      0                        {
106                                         no warnings "void";
107                                         my $w = $y xor next;
108                                         $x[23]++;
109            1                        }
110                                     
111   ***      1     50                 
112   ***      0                        for my $y (0, 1)
113                                     {
114                                         $y || last;
115            1                            $x[24]++;
116                                     }
117            2    100                 
118            1                        for my $y (1, 0)
119                                     {
120                                         $y || last;
121            1                            $x[25]++;
122                                     }
123            2    100                 
124            1                        for my $y (0, 1)
125                                     {
126                                         $y && last;
127            1                            $x[26]++;
128                                     }
129   ***      1     50                 
130   ***      0                        for my $y (1, 0)
131                                     {
132                                         $y && last;
133            1                            $x[27]++;
134                                     }
135            1                    1   
               1                        
               1                        
136   ***      1             0          for my $y (0, 1)
137   ***      0                        {
138                                         no warnings "void";
139                                         my $w = $y xor last;
140            1                            $x[28]++;
141                                     }
142            1                    1   
               1                        
               1                        
143   ***      1             0          for my $y (1, 0)
144   ***      0                        {
145                                         no warnings "void";
146                                         my $w = $y xor last;
147                                         $x[29]++;
148            1                        }
149                                     
150   ***      1     50                 
151   ***      0                        for my $y (0, 1)
152                                     {
153                                         $y || goto G1;
154                                         $x[30]++;
155            1                        }
156                                     G1:
157            2    100                 
158            1                        for my $y (1, 0)
159                                     {
160                                         $y || goto G2;
161                                         $x[31]++;
162            1                        }
163                                     G2:
164            2    100                 
165            1                        for my $y (0, 1)
166                                     {
167                                         $y && goto G3;
168                                         $x[32]++;
169            1                        }
170                                     G3:
171   ***      1     50                 
172   ***      0                        for my $y (1, 0)
173                                     {
174                                         $y && goto G4;
175                                         $x[33]++;
176            1                        }
177                                     G4:
178            1                    1   
               1                        
               1                        
179   ***      1             0          for my $y (0, 1)
180   ***      0                        {
181                                         no warnings "void";
182                                         my $w = $y xor goto G5;
183                                         $x[34]++;
184            1                        }
185                                     G5:
186            1                    1   
               1                        
               1                        
187   ***      1             0          for my $y (1, 0)
188   ***      0                        {
189                                         no warnings "void";
190                                         my $w = $y xor goto G6;
191                                         $x[35]++;
192                                     }
193            1                        G6:
194                                     
195            1                        
196            1                        my $z;
197                                     
198            3                        $z = -1;
199            3    100                 for my $y (0, 1)
200            2    100                 {
201            1                            $z++;
202                                         last if $z > 1;
203                                         $z || redo;
204            1                            $x[36]++;
205            1                        }
206                                     
207            3                        $z = -1;
208            3    100                 for my $y (1, 0)
209            2    100                 {
210            1                            $z++;
211                                         last if $z > 1;
212                                         !$z || redo;
213            1                            $x[37]++;
214            1                        }
215                                     
216            3                        $z = -1;
217            3    100                 for my $y (0, 1)
218            2    100                 {
219            1                            $z++;
220                                         last if $z > 1;
221                                         $z && redo;
222            1                            $x[38]++;
223            1                        }
224                                     
225            3                        $z = -1;
226            3    100                 for my $y (1, 0)
227            2    100                 {
228            1                            $z++;
229                                         last if $z > 1;
230                                         !$z && redo;
231                                         $x[39]++;
232            1                        }
233            1                        
234                                     
235            3                        $z = -1;
236            3    100                 for my $y (0, 1)
237            1                    1   {
               1                        
               1                        
238   ***      2             0              $z++;
239   ***      0                            last if $z > 1;
240                                         no warnings "void";
241                                         my $w = $z xor redo;
242            1                            $x[40]++;
243            1                        }
244                                     
245            3                        $z = -1;
246            3    100                 for my $y (1, 0)
247            1                    1   {
               1                        
               1                        
248   ***      2             0              $z++;
249   ***      0                            last if $z > 1;
250                                         no warnings "void";
251                                         my $w = !$z xor redo;
252                                         $x[41]++;
253                                     }
254                                     
255                                     
256                                     my @s =
257            4    100             4   (
258            2                            sub
259                                         {
260                                             shift || return;
261                                             $x[42]++;
262                                         },
263            4    100             4   
264            2                            sub
265                                         {
266                                             shift && return;
267                                             $x[43]++;
268                                         },
269            1                    1   
               1                        
               1                        
270   ***      4             0      4       sub
271   ***      0                            {
272                                             no warnings "void";
273                                             shift xor return;
274                                             $x[44]++;
275                                         },
276            4           100      4   
277            2                            sub
278                                         {
279                                             my $x = shift || return;
280                                             $x[45]++;
281                                         },
282            4           100      4   
283            2                            sub
284                                         {
285                                             my $x = shift && return;
286                                             $x[46]++;
287                                         },
288            4                    4   
289            4                            sub
290                                         {
291            6           100                  my $x = shift;
292            4                                for my $y (1 .. 2)
293                                             {
294                                                 my $z = $x || last;
295                                                 $x[47]++;
296                                             }
297                                         },
298            4                    4   
299            4                            sub
300                                         {
301            8           100                  my $x = shift;
302            4                                for my $y (1 .. 2)
303                                             {
304                                                 my $z = $x || next;
305                                                 $x[48]++;
306                                             }
307                                         },
308            4                    4   
309            4                            sub
310                                         {
311           10           100                  my $x = shift;
312            8                                for my $y (1 .. 2)
313                                             {
314                                                 my $z = $x++ || redo;
315                                                 $x[49]++;
316                                             }
317                                         },
318            4                    4   
319            4                            sub
320                                         {
321            6           100                  my $x = shift;
322            4                                for my $y (1 .. 2)
323                                             {
324                                                 my $z = $x || goto GR;
325            4                                    $x[50]++;
326                                             }
327                                     GR:
328                                         },
329            4                    4   
330            4                            sub
331                                         {
332            8           100                  my $x = shift;
               8                        
333            8                                for my $y (1 .. 2)
334                                             {
335                                                 eval { my $z = $x || die };
336            1                                    $x[51]++;
337                                             }
338            1                            },
339                                     );
340           10                        
341                                     for my $s (@s)
342           20                        {
343                                         for my $y (0, 1)
344                                         {
345           10                                $s->($y)
346                                         }
347           20                        
348                                         for my $y (1, 0)
349                                         {
350                                             $s->($y)
351                                         }
352            1                        }
353                                     
354   ***      1     50     33          
      ***            50     33          
      ***            50     50          
355                                     my ($a, $b) = (0, 1);
356   ***      0                        
357                                     if ($a && $b)
358                                     {
359                                         print "path 1\n";
360   ***      0                        }
361                                     elsif (!$a && !$b)
362                                     {
363                                         print "path 2\n";
364            1                        }
365   ***      1     50     33          elsif ($b || 0)
      ***            50     33          
366                                     {
367   ***      0                            print "path 3\n";
368                                         if (!$b || $a)
369                                         {
370                                             print "path 4\n";
371            1                            }
372                                         elsif (!$a && $b)
373                                         {
374                                             print "path 5\n";
375                                         }
376                                     }


Branches
--------

line  err      %   true  false   branch
----- --- ------ ------ ------   ------
19    ***     50      0      4   if ($y and $z) { }
26           100      2      2   if ($y or $z) { }
34    ***     50      0      4   if $y
35    ***     50      0      4   if $y
37           100      2      2   if $z
38           100      2      2   if $z
40    ***     50      4      0   unless $y
41    ***     50      4      0   unless $y
43           100      2      2   unless $z
44           100      2      2   unless $z
46    ***     50      0      4   $y ? :
47           100      2      2   $z ? :
49    ***     50      0      4   if ($y) { }
      ***     50      0      4   elsif ($y and $z) { }
             100      2      2   elsif ($y or $z) { }
65    ***     50      0      4   if $y and $z
      ***     50      0      4   if $y and $z
72           100      1      1   unless $y
78           100      1      1   unless $y
84           100      1      1   if $y
90           100      1      1   if $y
111   ***     50      1      0   unless $y
117          100      1      1   unless $y
123          100      1      1   if $y
129   ***     50      1      0   if $y
150   ***     50      1      0   unless $y
157          100      1      1   unless $y
164          100      1      1   if $y
171   ***     50      1      0   if $y
199          100      1      2   if $z > 1
200          100      1      1   unless $z
208          100      1      2   if $z > 1
209          100      1      1   if $z
217          100      1      2   if $z > 1
218          100      1      1   if $z
226          100      1      2   if $z > 1
227          100      1      1   unless $z
236          100      1      2   if $z > 1
246          100      1      2   if $z > 1
257          100      2      2   unless shift()
263          100      2      2   if shift()
354   ***     50      0      1   if ($a and $b) { }
      ***     50      0      1   elsif (not $a || $b) { }
      ***     50      1      0   elsif ($b or 0) { }
365   ***     50      0      1   if (not $b or $a) { }
      ***     50      1      0   elsif (not $a and $b) { }


Conditions
----------

and 2 conditions

line  err      %      l     !l   expr
----- --- ------ ------ ------   ----
282          100      2      2   shift() && (return)

and 3 conditions

line  err      %     !l  l&&!r   l&&r   expr
----- --- ------ ------ ------ ------   ----
19    ***     33      4      0      0   $y and $z
49    ***     33      4      0      0   $y and $z
65    ***     33      4      0      0   $y and $z
      ***     33      4      0      0   $y and $z
354   ***     33      1      0      0   $a and $b
365   ***     33      0      0      1   not $a and $b

or 2 conditions

line  err      %      l     !l   expr
----- --- ------ ------ ------   ----
276          100      2      2   shift() || (return)
291          100      4      2   $x || (last)
301          100      4      4   $x || (next)
311          100      8      2   $x++ || (redo)
321          100      4      2   $x || (goto GR)
332          100      4      4   $x || die()
354   ***     50      1      0   $b or 0

or 3 conditions

line  err      %      l  !l&&r !l&&!r   expr
----- --- ------ ------ ------ ------   ----
26    ***     66      0      2      2   $y or $z
49    ***     66      0      2      2   $y or $z
354   ***     33      0      1      0   $a || $b
365   ***     33      0      0      1   not $b or $a

xor 4 conditions

line  err      %   l&&r  l&&!r  !l&&r !l&&!r   expr
----- --- ------ ------ ------ ------ ------   ----
97    ***      0      0      0      0      0   my $w = $y xor next
104   ***      0      0      0      0      0   my $w = $y xor next
136   ***      0      0      0      0      0   my $w = $y xor last
143   ***      0      0      0      0      0   my $w = $y xor last
179   ***      0      0      0      0      0   my $w = $y xor goto G5
187   ***      0      0      0      0      0   my $w = $y xor goto G6
238   ***      0      0      0      0      0   my $w = $z xor redo
248   ***      0      0      0      0      0   my $w = !$z xor redo
270   ***      0      0      0      0      0   shift() xor return


Covered Subroutines
-------------------

Subroutine Count Location             
---------- ----- ---------------------
BEGIN          1 tests/cond_branch:10 
BEGIN          1 tests/cond_branch:103
BEGIN          1 tests/cond_branch:11 
BEGIN          1 tests/cond_branch:135
BEGIN          1 tests/cond_branch:142
BEGIN          1 tests/cond_branch:178
BEGIN          1 tests/cond_branch:186
BEGIN          1 tests/cond_branch:237
BEGIN          1 tests/cond_branch:247
BEGIN          1 tests/cond_branch:269
BEGIN          1 tests/cond_branch:96 
__ANON__       4 tests/cond_branch:257
__ANON__       4 tests/cond_branch:263
__ANON__       4 tests/cond_branch:270
__ANON__       4 tests/cond_branch:276
__ANON__       4 tests/cond_branch:282
__ANON__       4 tests/cond_branch:288
__ANON__       4 tests/cond_branch:298
__ANON__       4 tests/cond_branch:308
__ANON__       4 tests/cond_branch:318
__ANON__       4 tests/cond_branch:329


